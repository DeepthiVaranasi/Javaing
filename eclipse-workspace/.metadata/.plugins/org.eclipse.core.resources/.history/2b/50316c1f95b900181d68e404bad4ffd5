package com.acme;

public class Binaryy{
	private  Node head;
	
	public void addNode(Node node)
	{
		Node tail = getTailNode();
		if(tail == null)
		{
			head = node;
		}
		else
		{
			tail.setNextNode(node);
		}
	}
	
	private Node getTailNode() {
		Node tail = null;
		if(head == null)
		{
			tail = null;
		}
		else
		{	
			Node currentNode = head;
			Node nextNode;
			do {
				nextNode = currentNode.getNextNode();
				if(nextNode!=null) {
					currentNode = currentNode.getNextNode();
				}
				else if(nextNode == null) {
					tail = currentNode;
				}
			}
			while(nextNode !=null);
		}
					return tail;
				}
	
			public  int getSize() {
				int count = 0;
				Node tail ;
				if(head == null)
				{
					tail = null;
				}
				else
				{	count++;
					Node currentNode = head;
					Node nextNode;
					do {
						nextNode = currentNode.getNextNode();
						if(nextNode!=null) {
							count++;
							currentNode = currentNode.getNextNode();
						}
						else {
							break;}
					}
					while(nextNode!=null);
				}
				return count;
			}
						
						
				
				
			
		
		public void deleteNode(int key) {
			Node currentNode = head;
			Node previousNode = null;
			Node newNextNode = null;
			if(currentNode.getData()==key)
					{
				currentNode = currentNode.getNextNode();
					}
			while(currentNode.getData()!=key) {
				 previousNode = currentNode;
				currentNode = currentNode.getNextNode();
				 newNextNode = currentNode.getNextNode();
			}
			previousNode.nextNode = newNextNode.nextNode;
			System.out.println(previousNode);
			System.out.println(newNextNode);;
		}
		
	
	public static void main(String args[])
	{
		LinkedList linkedList = new LinkedList(5);
		Node node1 = new Node(1,null);
		System.out.println(node1);
		linkedList.addNode(node1);
		Node tailNode = linkedList.getTailNode();
		System.out.println(tailNode);
		
		Node node2 = new Node(2,null);
		linkedList.addNode(node2);
		System.out.println(node2);
		tailNode = linkedList.getTailNode();
		System.out.println(tailNode);
		
		Node node3 = new Node(3,null);
		linkedList.addNode(node3);
		System.out.println(node3);
		tailNode = linkedList.getTailNode();
		System.out.println(tailNode);
		int value = node3.getData();
		System.out.println(value);
		int size = Binaryy.getSize();
		System.out.println(size);
		
	
	
	
	}
	}
	

